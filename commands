local RunService = game:GetService("RunService")
local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local LocalPlayer = Players.LocalPlayer
local Camera = workspace.CurrentCamera

-- Retrieve configuration
local config = getgenv().EZLockConfig
local camLocked = false
local targetPlayer = nil
local cameraConnection

-- Predefined list of players who can access the command bar GUI
local authorizedUsers = {
    "Player1", "Player2", "Player3"  -- Replace with actual usernames
}

local function isAuthorized(user)
    for _, username in ipairs(authorizedUsers) do
        if user.Name == username then
            return true
        end
    end
    return false
end

local function getAdjustedPredictionStrength()
    local ping = LocalPlayer:GetNetworkPing()
    local pingMs = ping * 1000
    local adjustedStrength = config.Prediction.Strength * (1 + (pingMs / 200))
    return adjustedStrength
end

local function predictPosition(part)
    local currentVelocity = part.Velocity
    local predictionStrength = getAdjustedPredictionStrength()
    local predictedPosition = part.Position + (currentVelocity * predictionStrength)
    return predictedPosition
end

local function createTargetPart(character)
    local targetPart = Instance.new("Part")
    targetPart.Name = "EZTargetPart"
    targetPart.Size = Vector3.new(1, 1, 1)
    targetPart.Transparency = 1
    targetPart.CanCollide = false
    targetPart.Anchored = true
    targetPart.Parent = character
    return targetPart
end

local function lockCamera(target)
    local targetPart = target:FindFirstChild("EZTargetPart")
    if not targetPart then
        targetPart = createTargetPart(target)
    end

    cameraConnection = RunService.RenderStepped:Connect(function()
        if camLocked and target and target:FindFirstChild("EZTargetPart") then
            local partToTrack
            if target.Humanoid.Jump then
                partToTrack = target:FindFirstChild(config.Targeting.AirPart)
            else
                partToTrack = target:FindFirstChild(config.Targeting.TargetPart)
            end
            
            if partToTrack then
                local predictedPosition = predictPosition(partToTrack)
                targetPart.Position = predictedPosition
                Camera.CFrame = CFrame.new(Camera.CFrame.Position, predictedPosition)

                if not target:FindFirstChild("TargetIndicator") then
                    local box = Instance.new("Part")
                    box.Name = "TargetIndicator"
                    box.Size = Vector3.new(4, 5, 4)
                    box.Transparency = 1
                    box.CFrame = partToTrack.CFrame
                    box.Anchored = true
                    box.CanCollide = false
                    box.Color = Color3.fromRGB(0, 255, 0)
                    box.Parent = target
                else
                    local box = target:FindFirstChild("TargetIndicator")
                    box.CFrame = partToTrack.CFrame
                end
            end
        end
    end)
end

local function unlockCamera()
    if cameraConnection then
        cameraConnection:Disconnect()
        cameraConnection = nil
    end
    if targetPlayer and targetPlayer:FindFirstChild("TargetIndicator") then
        targetPlayer.TargetIndicator:Destroy()
    end
    if targetPlayer and targetPlayer:FindFirstChild("EZTargetPart") then
        targetPlayer.EZTargetPart:Destroy()
    end
    camLocked = false
    targetPlayer = nil
end

local function isInFOV(position)
    local screenPoint, onScreen = Camera:WorldToScreenPoint(position)
    if not onScreen then return false end
    local screenCenter = Vector2.new(Camera.ViewportSize.X / 2, Camera.ViewportSize.Y / 2)
    local screenPoint2D = Vector2.new(screenPoint.X, screenPoint.Y)
    local distanceFromCenter = (screenPoint2D - screenCenter).Magnitude
    return distanceFromCenter <= 70  -- Fixed FOV radius as specified in the original script
end

local function findClosestPlayer()
    local closestPlayer = nil
    local closestDistance = math.huge

    for _, player in pairs(Players:GetPlayers()) do
        if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild(config.Targeting.TargetPart) then
            local partToTrack = player.Character:FindFirstChild(config.Targeting.TargetPart)
            if isInFOV(partToTrack.Position) then
                local distance = (partToTrack.Position - LocalPlayer.Character[config.Targeting.TargetPart].Position).Magnitude
                if distance < closestDistance then
                    closestDistance = distance
                    closestPlayer = player.Character
                end
            end
        end
    end

    return closestPlayer
end

local function makeButtonDraggable(button)
    local dragging = false
    local dragInput, mousePos, framePos

    local function update(input)
        local delta = input.Position - mousePos
        button.Position = UDim2.new(
            framePos.X.Scale,
            framePos.X.Offset + delta.X,
            framePos.Y.Scale,
            framePos.Y.Offset + delta.Y
        )
    end

    button.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = true
            mousePos = input.Position
            framePos = button.Position

            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragging = false
                end
            end)
        end
    end)

    button.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
            dragInput = input
        end
    end)

    UserInputService.InputChanged:Connect(function(input)
        if input == dragInput and dragging then
            update(input)
        end
    end)
end

if UserInputService.TouchEnabled then
    local screenGui = Instance.new("ScreenGui")
    screenGui.ResetOnSpawn = false
    screenGui.Parent = LocalPlayer:WaitForChild("PlayerGui")

    local lockButton = Instance.new("TextButton")
    lockButton.Size = UDim2.new(0, 100, 0, 50)
    lockButton.Position = UDim2.new(0.05, 0, 0.5, -25)
    lockButton.Text = "Lock"
    lockButton.Parent = screenGui

    local uiCorner = Instance.new("UICorner")
    uiCorner.CornerRadius = UDim.new(0, 12)
    uiCorner.Parent = lockButton

    local uiStroke = Instance.new("UIStroke")
    uiStroke.Color = Color3.new(1, 1, 1)
    uiStroke.Thickness = 2
    uiStroke.Parent = lockButton

    makeButtonDraggable(lockButton)

    lockButton.MouseButton1Click:Connect(function()
        if camLocked then
            unlockCamera()
        else
            targetPlayer = findClosestPlayer()
            if targetPlayer then
                camLocked = true
                lockCamera(targetPlayer)
            end
        end
    end)
end

UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if not gameProcessed and input.KeyCode == Enum.KeyCode[config.Keybind] then
        if camLocked then
            unlockCamera()
        else
            targetPlayer = findClosestPlayer()
            if targetPlayer then
                camLocked = true
                lockCamera(targetPlayer)
            end
        end
    end
end)

-- Command bar GUI
local function createCommandBar()
    local screenGui = Instance.new("ScreenGui")
    screenGui.ResetOnSpawn = false
    screenGui.Parent = LocalPlayer:WaitForChild("PlayerGui")

    local frame = Instance.new("Frame")
    frame.Size = UDim2.new(0, 300, 0, 150)
    frame.Position = UDim2.new(0.05, 0, 0.5, -75)
    frame.BackgroundColor3 = Color3.new(0.1, 0.1, 0.1)
    frame.Parent = screenGui

    local uiCorner = Instance.new("UICorner")
    uiCorner.CornerRadius = UDim.new(0, 12)
    uiCorner.Parent = frame

    local uiStroke = Instance.new("UIStroke")
    uiStroke.Color = Color3.new(1, 1, 1)
    uiStroke.Thickness = 2
    uiStroke.Parent = frame

    local textBox = Instance.new("TextBox")
    textBox.Size = UDim2.new(0, 280, 0, 40)
    textBox.Position = UDim2.new(0.5, -140, 0.3, -20)
    textBox.PlaceholderText = "Enter command..."
    textBox.Parent = frame

    local executeButton = Instance.new("TextButton")
    executeButton.Size = UDim2.new(0, 100, 0, 40)
    executeButton.Position = UDim2.new(0.5, -50, 0.7, -20)
    executeButton.Text = "Execute"
    executeButton.Parent = frame

    makeButtonDraggable(frame)

    executeButton.MouseButton1Click:Connect(function()
        local command = textBox.Text
        local args = command:split(" ")
        local action = args[1]
        local targetName = args[2]

        if action == "Kick" and targetName then
            local targetPlayer = Players:FindFirstChild(targetName)
            if targetPlayer then
                targetPlayer:Kick("You have been kicked from the game.")
            end
        elseif action == "DisableCamlock" and targetName then
            local targetPlayer = Players:FindFirstChild(targetName)
            if targetPlayer and targetPlayer.Character then
                -- Add logic to disable camlock for the target player
                if targetPlayer.Character:FindFirstChild("EZTargetPart") then
                    targetPlayer.Character.EZTargetPart:Destroy()
                end
                if targetPlayer.Character:FindFirstChild("TargetIndicator") then
                    targetPlayer.Character.TargetIndicator:Destroy()
                end
            end
        elseif action == "CheckUsers" then
            local camlockUsers = 0
            for _, player in pairs(Players:GetPlayers()) do
                if player.Character and player.Character:FindFirstChild("EZTargetPart") then
                    camlockUsers = camlockUsers + 1
                end
            end
            print("Users: " .. camlockUsers)
        end
    end)
end

UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if not gameProcessed and input.KeyCode == Enum.KeyCode.Insert then
        if isAuthorized(LocalPlayer) then
            createCommandBar()
        else
            warn("You are not authorized to use the command bar.")
        end
    end
end)
